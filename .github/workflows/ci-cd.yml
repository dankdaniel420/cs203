name: Spring Boot CI/CD Pipeline

on:
  push:
    branches:
      - ci/cd
  pull_request:
    branches:
      - ci/cd

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run Super-Linter
        uses: github/super-linter@v5
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_JAVA: true           # Enable Java linting
          VALIDATE_YAML: true           # Enable YAML linting
          VALIDATE_JSON: true           # Enable JSON linting (optional)
          
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # You can use temurin, zulu, etc.
          java-version: '17'        # Use the JDK version compatible with Spring Boot project

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean install -DskipTests=true

      - name: Run Tests
        run: mvn test

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/ci/cd'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to Server
        env:
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        run: |
          scp target/your-app.jar $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH
          ssh $DEPLOY_USER@$DEPLOY_HOST "sudo systemctl restart your-app-service"
