######### Focus: Player and Waiting List
### Get all tournaments
GET http://localhost:8080/tournaments

### Get tourn by ID
GET http://localhost:8080/tournaments/1

### Get tourn by ID - not found
GET http://localhost:8080/tournaments/9

### delete tournament
DELETE http://localhost:8080/tournaments/2

### delete tournament - not found
DELETE http://localhost:8080/tournaments/9

######## Register for tournament after Date
## Again - already registered - fail
POST http://localhost:8080/tournaments/1/register
Content-Type: application/json

{
    "username": "User110",
    "password": "user1234",
    "authorities": "ROLE_USER"
}

### Withdraw from tournament - t started - js remove player no move wait
DELETE http://localhost:8080/tournaments/1/withdraw
Content-Type: application/json

{
    "username": "User100",
    "password": "user1234",
    "authorities": "ROLE_USER"
}

######### Register Before Start Date ####
### Register for tournament - before start date
POST http://localhost:8080/tournaments/2/register
Content-Type: application/json

{
    "username": "user1",
    "password": "pass1234",
    "authorities": "ROLE_USER"
}
### Register for tournament - wait list - check get
POST http://localhost:8080/tournaments/2/register
Content-Type: application/json

{
    "username": "User",
    "password": "user1234",
    "authorities": "ROLE_USER"
}
### Withdraw from tournament - move wait to registered - check get
DELETE http://localhost:8080/tournaments/2/withdraw
Content-Type: application/json

{
    "username": "user1",
    "password": "pass1234",
    "authorities": "ROLE_USER"
}

######### TEST ADD ROUND FROM HERE
# Register for tournament - wait list - check get
POST http://localhost:8080/tournaments/1/register
Content-Type: application/json

{
    "username": "User100",
    "password": "user1234",
    "authorities": "ROLE_USER"
}

### Register for tournament - wait list - check get
POST  http://localhost:8080/tournaments/1/register
Content-Type: application/json

{
    "username": "User110",
    "password": "user1234",
    "authorities": "ROLE_USER"
}

### Register for tournament - wait list - check get
POST http://localhost:8080/tournaments/1/register
Content-Type: application/json

{
    "username": "User120",
    "password": "user1234",
    "authorities": "ROLE_USER"
}

### Register for tournament - wait list - check get
POST http://localhost:8080/tournaments/1/register
Content-Type: application/json

{
    "username": "User150",
    "password": "user1234",
    "authorities": "ROLE_USER"
}

### Withdraw from tournament - aft date - remove wait list
DELETE http://localhost:8080/tournaments/1/withdraw
Content-Type: application/json

{
    "username": "User",
    "password": "user1234",
    "authorities": "ROLE_USER"
}

### Get Round data for tournament
GET http://localhost:8080/tournaments/1/rounds

### Get standings
GET http://localhost:8080/tournaments/1/standings

### Get Tournament by ELO
GET http://localhost:8080/tournaments/byElo/200

### Update Match Result - update all - check /rounds should have round 2 + gamepoints updated
PUT http://localhost:8080/match/updateList
Content-Type: application/json

[
    {
        "id": 1,
        "isBYE": false,
        "result": 1
    },
    {
        "id": 2,
        "isBYE": false,
        "result": -1
    }
]

### Update Match Result - update 1 - check /rounds should be half done
PUT http://localhost:8080/match/updateList
Content-Type: application/json

[
    {
        "id": 3,
        "isBYE": false,
        "result": 0
    }
]

### Update Match Result - update 1 - check /rounds should be done
### endTournament called check /rounds for updated elo? or standings
PUT http://localhost:8080/match/updateList
Content-Type: application/json

[
    {
        "id": 4,
        "isBYE": false,
        "result": -1
    }
]